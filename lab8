include<stdio.h>
#include<stdlib.h>

int opCount=0;

void swap(int *a,int *b){
	int temp;
	temp=*a;
	*a=*b;
	*b=temp;

}

int heapify(int arr[],int N,int i){
	int largest=i;
	int left=2*i+1;
	int right=2*i+2;
	//int opCount=0;

	if(left<N && arr[left]>arr[largest]){
		largest=left;
	    opCount++;

	}

	if(right<N && arr[right]>arr[largest]){
		largest=right;
	    opCount++;

	}


	if(largest!=i){
		swap(&arr[i],&arr[largest]);

	    heapify(arr,N,largest);

	}

}

int buildHeap(int arr[],int N){
	int startIndex=(N/2)-1;  //index of last non-leaf node
	int opCount=0;
	for(int i=startIndex;i>=0;i--){
		heapify(arr,N,i);

	}
    //int opCount=heapify(arr,N,i);
	//printf("Number of comparisons: %d\n",opCount);
    //return opCount;

}

void printHeap(int arr[],int N){
	printf("Array representation of heap is:\n");
	for(int i=0;i<N;i++){
		printf("%d ",arr[i]);
	}
	printf("\n");
}

int main(){
	int N;
	int *arr=(int*)malloc(N*sizeof(int));
	printf("Enter size of array:");
	scanf("%d",&N);
	printf("Enter elements:");
	for(int i=0;i<N;i++){
		scanf("%d",&arr[i]);
	}
	

	buildHeap(arr,N);
	printHeap(arr,N);

	printf("Number of comparisons: %d\n",opCount);
	


	return 0;
}
========================================================
#include<stdio.h>
#include<stdlib.h>
int opCount=0;//global variable 

void swap(int *a,int *b){
	int temp;
	temp=*a;
	*a=*b;
	*b=temp;

}

void heapify(int arr[],int N,int i){
	int largest=i;
	int left=2*i+1;
	int right=2*i+2;

	if(left<N && arr[left]>arr[largest]){
		largest=left;
		opCount++;
	}

	if(right<N && arr[right]>arr[largest]){
		largest=right;
		opCount++;
	}

	if(largest!=i){
		swap(&arr[i],&arr[largest]);

		heapify(arr,N,largest);
	}

	
}

void heapSort(int arr[],int N){
	for(int i=(N/2)-1;i>=0;i--){
		heapify(arr,N,i);
	}
	//heap sort
	for(int i=N-1;i>=0;i--){
		swap(&arr[0],&arr[i]);

		//heapify to get the largest at root again
		heapify(arr,i,0);
	}
}



void printArray(int arr[],int N){
	for(int i=0;i<N;i++){
		printf("%d ",arr[i]);
	}
	printf("\n");
}

int main(){
	
	int N;
	printf("Enter size of array:");
	scanf("%d",&N);
	int *arr=(int*)malloc(N*sizeof(int));
	
	printf("Enter elements:");
	for(int i=0;i<N;i++){
		scanf("%d",&arr[i]);
	}
	heapSort(arr,N);
	printf("Sorted array:\n");
	printArray(arr,N);
	/*
	int arr[]={12,11,13,5,6,7};
	int N=sizeof(arr)/sizeof(arr[0]);

	heapSort(arr,N);
	printf("Sorted array:\n");
	printArray(arr,N);
*/

	printf("Number of comparisons: %d\n",opCount);

}
	
